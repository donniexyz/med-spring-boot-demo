@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.github.donniexyz.demo.med.entity.AccountOwner",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/


digraph g {
    rankdir="TB"
    splines=polyline


'nodes 
subgraph cluster_1245635613 { 
   	label=github
	labeljust=l
	fillcolor="#ececec"
	style=filled

   subgraph cluster_1253053945 { 
   	label=donniexyz
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled

   AccountHistory1910194154[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AccountHistory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   account: CashAccount [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   balance: BigDecimal [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   description: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   transactionDate: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   transactionType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): AccountHistoryBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ copy(): AccountHistory</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AccountOwner1910194154[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AccountOwner</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   firstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   phoneNumber: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): AccountOwnerBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ copy(): AccountOwner</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AccountTransaction1910194154[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AccountTransaction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   fromAccount: CashAccount [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   toAccount: CashAccount [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   transactionAmount: BigDecimal [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   transactionDate: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   transactionType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): AccountTransactionBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ copy(): AccountTransaction</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CashAccount1910194154[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CashAccount</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   accountHistories: List&lt;AccountHistory&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   accountOwner: AccountOwner [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   balance: BigDecimal [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastTransactionDate: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   title: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): CashAccountBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ copy(): CashAccount</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
AccountHistory1910194154 -> CashAccount1910194154[label="account
[0..1]"];
AccountTransaction1910194154 -> CashAccount1910194154[label="fromAccount
[0..1]"];
AccountTransaction1910194154 -> CashAccount1910194154[label="toAccount
[0..1]"];
CashAccount1910194154 -> AccountHistory1910194154[label="accountHistories
[0..1]"];
CashAccount1910194154 -> AccountOwner1910194154[label="accountOwner
[0..1]"];
    
}

@enduml